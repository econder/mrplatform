2/2/2017 2:31:28 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 4:04:51 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 4:28:06 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 4:28:09 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 4:45:41 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 7:46:05 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:46:07 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:46:11 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:46:11 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:35 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:38 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:42 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:42 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:58:21 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:12:43 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:14:02 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:05 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:12 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:14:13 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:13 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:13 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:31:33 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:36 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/6/2017 9:52:39 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:41 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:49 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/6/2017 9:52:49 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/6/2017 9:52:49 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/6/2017 9:52:50 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:50 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/6/2017 9:52:53 PM      AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:53 PM      AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:54 PM      AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/6/2017 10:02:03 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 10:15:14 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/6/2017 10:18:28 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/6/2017 10:18:28 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/13/2017 1:32:51 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/13/2017 1:32:54 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 1:33:06 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:07 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:07 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:21 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:24 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 4:41:37 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:37 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:37 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:39 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:42 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/15/2017 3:16:58 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:58 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:58 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 11:15:51 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 11:15:54 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 11:16:09 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:09 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:09 AM    AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 2:05:14 PM     UserMessage::DoSend(string sender, string recipient, string message, int priority = 2)->There are more columns in the INSERT statement than values specified in the VALUES clause. The number of values in the VALUES clause must match the number of columns specified in the INSERT statement.
Invalid column name 'type'.
Invalid column name 'nodeName'.
2/16/2017 2:05:23 PM     UserMessage::DoSend(string sender, string recipient, string message, int priority = 2)->There are more columns in the INSERT statement than values specified in the VALUES clause. The number of values in the VALUES clause must match the number of columns specified in the INSERT statement.
Invalid column name 'type'.
Invalid column name 'nodeName'.
2/16/2017 3:20:13 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:17 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:20:29 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:29 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:29 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:34 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:37 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:23:50 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:51 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:51 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:01 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:04 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/17/2017 2:35:21 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:22 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:22 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/17/2017 3:37:18 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@id".
2/17/2017 3:37:51 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@id".
2/17/2017 3:39:55 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@msgId".
2/17/2017 3:40:16 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@msgId".
2/17/2017 3:43:03 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Invalid column name 'recipient'.
2/24/2017 10:56:24 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:27 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 10:56:39 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:40 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:40 AM    AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 11:07:43 AM    UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
Cannot insert the value NULL into column 'id', table 'mrsystems.dbo.MessagesRead'; column does not allow nulls. INSERT fails.
2/24/2017 1:16:03 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 1:55:21 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:26 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 1:55:49 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:49 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:50 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:53 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 1:55:53 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 2:30:23 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 2:30:23 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:40:32 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:40:32 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:41:34 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:41:49 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:42:32 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:43:26 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2017-02-24 16:50:44, -20 UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2017-02-24 18:47:48   UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2017-02-24 18:53:21   UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2017-02-24 18:54:33   UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2017-02-24 19:17:35   UserMessage::Archive(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:25:31   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:25:42   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 19:25:45   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:25:54   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 19:25:54   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-02-24 19:25:54   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-02-24 19:25:54   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:25:54   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 19:25:58   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:25:58   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:25:58   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 19:26:00   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::Archive(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::Archive(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::Archive(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:26:00   UserMessage::Archive(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:27:25   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:28:22   UserMessage::MarkAsRead(string recipient, int msgId)->Incorrect syntax near the keyword 'INTO'.
2017-02-24 19:29:33   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 19:29:36   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:29:45   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 19:29:45   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-02-24 19:29:45   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-02-24 19:29:45   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:29:45   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 19:29:49   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:29:49   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:29:49   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 19:33:29   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 19:33:31   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:33:40   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 19:33:40   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-02-24 19:33:40   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-02-24 19:33:40   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:33:40   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 19:33:44   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:33:44   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 19:33:44   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 20:32:31   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 20:32:34   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:32:43   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 20:32:43   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-02-24 20:32:43   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-02-24 20:32:43   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:32:43   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 20:32:47   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:32:47   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:32:47   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 20:37:16   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 20:37:19   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:37:28   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 20:37:28   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-02-24 20:37:28   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-02-24 20:37:28   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:37:28   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 20:37:32   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:37:32   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:37:33   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 20:37:59   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-02-24 20:38:03   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:38:11   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 20:38:11   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-02-24 20:38:11   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-02-24 20:38:11   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:38:11   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-02-24 20:38:15   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:38:15   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-02-24 20:38:15   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-03-27 14:10:31   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-03-27 14:10:34   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-03-27 14:10:43   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-03-27 14:10:43   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-03-27 14:10:43   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-03-27 14:10:43   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-03-27 14:10:43   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-03-27 14:10:47   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-03-27 14:10:47   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-03-27 14:10:47   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-05 15:07:21   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-05 15:07:24   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-05 15:07:33   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-05 15:07:33   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-04-05 15:07:33   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-04-05 15:07:33   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-05 15:07:33   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-05 15:07:37   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-05 15:07:37   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-05 15:07:37   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-06 14:04:10   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-06 14:04:13   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-06 14:04:23   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-06 14:04:23   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-04-06 14:04:23   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-04-06 14:04:23   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-06 14:04:23   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-06 14:04:28   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-06 14:04:28   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-06 14:04:28   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-06 14:04:31   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->The number of rows provided for a FETCH clause must be greater then zero.
2017-04-06 14:05:08   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->The number of rows provided for a FETCH clause must be greater then zero.
2017-04-07 07:55:24   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-07 07:55:28   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-07 07:55:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-07 07:55:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-04-07 07:55:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-04-07 07:55:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-07 07:55:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-07 07:55:42   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-07 07:55:42   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-07 07:55:42   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-07 08:12:23   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Must declare the scalar variable "@return_valueEXEC".
Incorrect syntax near '@return_value'.
2017-04-07 08:15:10   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Must declare the scalar variable "@return_valueEXEC".
Incorrect syntax near '@return_value'.
2017-04-07 08:16:07   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Must declare the scalar variable "@return_valueEXEC".
Incorrect syntax near '@return_value'.
2017-04-07 08:18:09   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Must declare the scalar variable "@return_valueEXEC".
2017-04-28 16:12:27   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-28 16:12:41   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-28 16:13:08   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-28 16:13:08   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-04-28 16:13:08   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-04-28 16:13:08   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-28 16:13:08   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-04-28 16:13:23   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-28 16:13:23   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-04-28 16:13:24   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-04-28 17:00:41   Menu::AddNavigationItem(string screenName, string titleTop, string titleBottom)->Multiple-step OLE DB operation generated errors. Check each OLE DB status value, if available. No work was done.
2017-04-28 17:01:35   Menu::AddNavigationItem(string screenName, string titleTop, string titleBottom)->Multiple-step OLE DB operation generated errors. Check each OLE DB status value, if available. No work was done.
2017-04-28 17:04:21   Menu::AddNavigationItem(string screenName, string titleTop, string titleBottom)->Multiple-step OLE DB operation generated errors. Check each OLE DB status value, if available. No work was done.
2017-05-10 16:49:26   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-05-10 16:49:29   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-10 16:49:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-05-10 16:49:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-05-10 16:49:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-05-10 16:49:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-10 16:49:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-05-10 16:49:42   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-10 16:49:42   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-10 16:49:43   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-05-11 13:23:12   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-05-11 13:23:15   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-11 13:23:24   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-05-11 13:23:24   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-05-11 13:23:24   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-05-11 13:23:24   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-11 13:23:24   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-05-11 13:23:28   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-11 13:23:28   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-11 13:23:28   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-05-11 13:23:31   UserEvent::GetHistoryDataSet(DateTime eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 13:23:31   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid object name 'EventLog'.
2017-05-11 13:23:31   UserEvent::GetHistoryRecordset(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid object name 'EventLog'.
2017-05-11 13:23:31   UserEvent::GetHistoryRecordset(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid object name 'EventLog'.
2017-05-11 13:23:31   UserEvent::GetHistoryDataSet(DateTime eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 13:23:31   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 13:23:31   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 13:23:31   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 13:23:31   UserEvent::GetHistoryRecordset(double eventStartDate, double eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid object name 'EventLog'.
2017-05-11 13:23:31   UserEvent::GetHistoryRecordset(double eventStartDate, double eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid object name 'EventLog'.
2017-05-11 13:29:35   UserEvent::GetHistoryRecordset(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:29:35   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:29:35   UserEvent::GetHistoryDataSet(DateTime eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 13:29:35   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 13:29:35   UserEvent::GetHistoryDataSet(DateTime eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 13:29:35   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 13:29:35   UserEvent::GetHistoryRecordset(double eventStartDate, double eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:29:35   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 13:29:35   UserEvent::GetHistoryRecordset(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:29:35   UserEvent::GetHistoryRecordset(double eventStartDate, double eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:39:53   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:42:58   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:42:58   UserEvent::LogEvent(string userName, string nodeName, string eventMessage, int eventType, string eventSource)->Invalid column name 'evtSource'.
Invalid column name 'evtType'.
Invalid column name 'evtMessage'.
2017-05-11 13:42:58   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:43:08   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:43:08   UserEvent::LogEvent(string userName, string nodeName, string eventMessage, int eventType, string eventSource)->Invalid column name 'evtSource'.
Invalid column name 'evtType'.
Invalid column name 'evtMessage'.
2017-05-11 13:43:08   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:48:22   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:53:29   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:53:30   UserEvent::LogEvent(string userName, string nodeName, string eventMessage, int eventType, string eventSource)->Implicit conversion from data type nvarchar to varbinary is not allowed. Use the CONVERT function to run this query.
2017-05-11 13:53:30   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:53:36   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:55:21   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:55:21   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:55:29   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:55:55   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:57:06   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:57:06   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'evtDateTime'.
2017-05-11 13:59:44   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'eventDateTime'.
2017-05-11 13:59:44   UserEvent::GetHistoryDataSet(int pageNumber, int resultsPerPage, bool sortAscending = true)->Invalid column name 'eventDateTime'.
2017-05-11 14:03:05   UserEvent::LogEvent(string userName, string nodeName, string eventMessage, int eventType, string eventSource)->Invalid column name 'eventSource'.
Invalid column name 'eventType'.
Invalid column name 'eventMessage'.
2017-05-11 14:10:06   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:10:06   UserEvent::GetHistoryDataSet(DateTime eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:10:06   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 14:10:06   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 14:10:23   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 14:11:44   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:11:44   UserEvent::GetHistoryDataSet(DateTime eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:14:20   UserEvent::GetHistoryRecordset(double eventDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->No value given for one or more required parameters.
2017-05-11 14:29:08   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:36:36   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:38:06   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:39:07   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:42:28   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:44:32   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:45:31   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:46:32   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-11 14:46:55   UserEvent::GetHistoryDataSet(DateTime eventStartDate, DateTime eventEndDate, int pageNumber, int resultsPerPage, bool sortAscending = true)->The fractional part of the provided time value overflows the scale of the corresponding SQL Server parameter or column. Increase bScale in DBPARAMBINDINFO or column scale to correct this error.
2017-05-19 11:27:46   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-05-19 11:27:48   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-05-19 11:27:50   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-19 11:27:51   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-19 11:27:51   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-05-19 11:27:51   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-05-19 11:27:55   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-05-19 11:28:00   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-05-19 11:28:00   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-05-19 11:28:00   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-06-06 13:56:14   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-06-07 10:45:16   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-06-07 10:45:16   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-06-07 10:45:19   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-06-07 10:45:27   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-06-07 10:45:27   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-06-07 10:45:34   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-06-07 10:45:38   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-06-07 10:45:38   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-06-07 10:45:50   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-07-20 14:39:34   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid usage of the option NEXT in the FETCH statement.
Incorrect syntax near the keyword 'WHERE'.
2017-07-20 17:07:55   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid usage of the option NEXT in the FETCH statement.
Incorrect syntax near the keyword 'WHERE'.
2017-07-20 17:08:05   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid usage of the option NEXT in the FETCH statement.
Incorrect syntax near the keyword 'WHERE'.
2017-07-26 14:23:28   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid object name 'vNavMenu'.
2017-07-26 14:24:08   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid object name 'vNavMenu'.
2017-07-26 14:25:58   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-07-26 14:26:01   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-07-26 14:26:10   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-07-26 14:26:10   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-07-26 14:26:10   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-07-26 14:26:10   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-07-26 14:26:10   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-07-26 14:26:14   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-07-26 14:26:14   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-07-26 14:26:15   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-07-26 14:26:17   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid object name 'vNavMenu'.
2017-07-26 14:26:32   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid object name 'vNavMenu'.
2017-07-26 14:26:47   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid object name 'vNavMenu'.
2017-07-26 14:26:49   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid object name 'vNavMenu'.
2017-07-26 14:31:49   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid column name 'childCount'.
2017-07-26 14:33:36   Menu::GetNavigationItemsDataSet(int pageNumber, int resultsPerPage)->Invalid column name 'childCount'.
2017-08-10 12:07:10   MenuFavorite::AddFavoriteItem(string userName, int navMenuId = 0)->Conversion failed when converting the nvarchar value 'econder' to data type int.
2017-08-10 12:09:57   MenuFavorite::AddFavoriteItem(string userName, int navMenuId = 0)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_NavFavorite_NavMenu". The conflict occurred in database "MRPlatform", table "dbo.NavMenu", column 'id'.
2017-08-10 12:12:19   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:19   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:19   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:12:19   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-08-10 12:12:19   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-08-10 12:12:19   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:19   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:12:19   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:19   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:19   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:22   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:12:22   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:12:22   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:12:22   MenuFavorite::AddFavoriteItem(string userName, int navMenuId = 0)->The INSERT statement conflicted with the FOREIGN KEY constraint "FK_NavFavorite_NavMenu". The conflict occurred in database "MRPlatform", table "dbo.NavMenu", column 'id'.
2017-08-10 12:12:22   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-08-10 12:12:50   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:50   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:50   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:12:50   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-08-10 12:12:50   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-08-10 12:12:50   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:50   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:12:50   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:50   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:50   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:12:52   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:12:52   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:12:52   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:12:52   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-08-10 12:13:54   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:13:54   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:13:54   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:13:54   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-08-10 12:13:54   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-08-10 12:13:54   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:13:54   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:13:54   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:13:54   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:13:54   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:13:57   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:13:57   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:13:57   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:13:57   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:13:57   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:13:57   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:13:57   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-08-10 12:15:29   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:16:18   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:16:18   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:16:18   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:16:18   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-08-10 12:16:18   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-08-10 12:16:18   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:16:18   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 12:16:18   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:16:18   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 12:16:18   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 12:16:20   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:16:20   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:16:20   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:16:20   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:16:20   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:16:20   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:16:20   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-08-10 12:20:56   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:20:56   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-08-10 12:20:56   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:20:56   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:20:56   MenuFavorite::MoveFavoriteItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavFavoriteItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:20:56   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 12:20:56   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 13:09:40   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 13:10:18   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 13:10:41   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 13:10:51   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 13:14:32   MenuNavigation::MoveNavigationItem(ItemMoveDirection direction, int currentOrderId)->The EXECUTE permission was denied on the object 'mrspMoveNavMenuItem', database 'MRPlatform', schema 'dbo'.
2017-08-10 13:17:30   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 13:17:30   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:17:30   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 13:17:30   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-08-10 13:17:30   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-08-10 13:17:30   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:17:30   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 13:17:30   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:17:30   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:17:30   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 13:17:32   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-08-10 13:25:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 13:25:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:25:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 13:25:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-08-10 13:25:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-08-10 13:25:37   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:25:37   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-08-10 13:25:37   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:25:37   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-08-10 13:25:37   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-08-10 13:25:40   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-08-10 13:28:30   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-09-25 15:19:13   MenuNavigation::AddNavigationHistory(string userName, int currentNavMenuId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_NavHistory_NavMenu". The conflict occurred in database "MRPlatform", table "dbo.NavMenu", column 'id'.
2017-09-25 15:19:14   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
2017-09-25 15:19:45   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-09-25 15:19:45   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2017-09-25 15:19:45   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-09-25 15:19:45   AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-09-25 15:19:45   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-09-25 15:19:45   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-09-25 15:19:46   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2017-09-25 15:19:46   AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2017-09-25 15:19:46   AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2017-09-25 15:19:46   AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2017-09-25 15:38:41   MenuNavigation::AddNavigationHistory(string userName, int currentNavMenuId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_NavHistory_NavMenu". The conflict occurred in database "MRPlatform", table "dbo.NavMenu", column 'id'.
2017-09-25 15:38:41   MenuFavorite::DoOrphanChildMenuAction(int menuItemId)->Invalid column name 'parentMenuId'.
