2/2/2017 2:31:28 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 4:04:51 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 4:28:06 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 4:28:09 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 4:45:41 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 7:46:05 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:46:07 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:46:11 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:46:11 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:35 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:38 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:42 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 7:50:42 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 7:58:21 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:12:43 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:14:02 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:05 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:12 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:14:13 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:13 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:14:13 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:31:33 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:36 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/2/2017 8:31:44 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/6/2017 9:52:39 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:41 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:49 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/6/2017 9:52:49 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/6/2017 9:52:49 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/6/2017 9:52:50 PM      AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:50 PM      AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/6/2017 9:52:53 PM      AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:53 PM      AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 9:52:54 PM      AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/6/2017 10:02:03 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/6/2017 10:15:14 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/6/2017 10:18:28 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/6/2017 10:18:28 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/13/2017 1:32:51 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/13/2017 1:32:54 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:02 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 1:33:06 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:07 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 1:33:07 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:21 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:24 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:33 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/13/2017 4:41:37 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:37 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/13/2017 4:41:37 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:39 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:42 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:53 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/15/2017 3:16:58 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:58 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/15/2017 3:16:58 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 11:15:51 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 11:15:54 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:04 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 11:16:09 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:09 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 11:16:09 AM    AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 2:05:14 PM     UserMessage::DoSend(string sender, string recipient, string message, int priority = 2)->There are more columns in the INSERT statement than values specified in the VALUES clause. The number of values in the VALUES clause must match the number of columns specified in the INSERT statement.
Invalid column name 'type'.
Invalid column name 'nodeName'.
2/16/2017 2:05:23 PM     UserMessage::DoSend(string sender, string recipient, string message, int priority = 2)->There are more columns in the INSERT statement than values specified in the VALUES clause. The number of values in the VALUES clause must match the number of columns specified in the INSERT statement.
Invalid column name 'type'.
Invalid column name 'nodeName'.
2/16/2017 3:20:13 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:17 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:25 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:20:29 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:29 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:20:29 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:34 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:37 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:46 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/16/2017 3:23:50 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:51 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/16/2017 3:23:51 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:01 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:04 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:16 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/17/2017 2:35:21 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:22 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/17/2017 2:35:22 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/17/2017 3:37:18 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@id".
2/17/2017 3:37:51 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@id".
2/17/2017 3:39:55 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@msgId".
2/17/2017 3:40:16 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Must declare the scalar variable "@msgId".
2/17/2017 3:43:03 PM     UserMessage::MarkAsRead(string recipient, int msgId)->Invalid column name 'recipient'.
2/24/2017 10:56:24 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:27 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:36 AM    AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 10:56:39 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:40 AM    AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 10:56:40 AM    AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 11:07:43 AM    UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
Cannot insert the value NULL into column 'id', table 'mrsystems.dbo.MessagesRead'; column does not allow nulls. INSERT fails.
2/24/2017 1:16:03 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 1:55:21 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:26 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date is not a valid DateTime value.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate)->Start date cannot be blank or null.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopEventOccurrences(int topCount, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:42 PM     AlarmEventLog::GetTopAlarmOccurrences(int topCount, string endDate, int numDays)->String was not recognized as a valid DateTime.
2/24/2017 1:55:49 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:49 PM     AlarmEventLog::GetTagHistory(string tagName, string startDate, string endDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:50 PM     AlarmEventLog::GetTagHistory(string tagName, int topCount, string startDate)->String was not recognized as a valid DateTime.
2/24/2017 1:55:53 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 1:55:53 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 2:30:23 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 2:30:23 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:40:32 PM     UserMessage::MarkAsRead(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesRead_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:40:32 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:41:34 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:41:49 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:42:32 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2/24/2017 4:43:26 PM     UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
2017-02-24 16:50:44, -20 UserMessage::Archive(string recipient, int msgId)->The statement has been terminated.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MessagesArchived_Messages". The conflict occurred in database "mrsystems", table "dbo.Messages", column 'id'.
